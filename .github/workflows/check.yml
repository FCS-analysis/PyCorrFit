name: Checks

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.10']
        os: [macos-latest, ubuntu-latest, windows-latest]
    env:
      # Display must be available globally for linux to know where xvfb is
      DISPLAY: :0
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup xvfb (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libegl1-mesa
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Install dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install coverage flake8 pytest
        python -m pip install -r tests/requirements.txt
        # install dependencies
        pip install -e .
        # show installed packages
        pip freeze
    - name: Test
      run: |
        coverage run --source=pycorrfit -m pytest tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
    - name: Create app and check if it runs (macOS)
      if: runner.os == 'macOS'
      working-directory: ./build-recipes
      run: |
        bash ./macos_build_app.sh PyCorrFit $(python -m pycorrfit --version)
    - name: Upload build artifacts
      if: (runner.os == 'macOS')
      uses: actions/upload-artifact@v3
      with:
        name: PyCorrFit_macosx
        path: |
          ./build-recipes/dist/*.dmg

    - name: Create app and check if it runs (Win)
      if: runner.os == 'windows'
      working-directory: ./build-recipes
      run: |
        pip install -r win_build_requirements.txt
        pyinstaller -y --log-level=WARN win_PyCorrFit.spec
        .\dist\PyCorrFit\PyCorrFit.exe --version
        python win_make_iss.py
        iscc /Q win_bmicro.iss
    - name: Upload build artifacts
      if: (runner.os == 'windows')
      uses: actions/upload-artifact@v3
      with:
        name: PyCorrFit
        path: |
          ./build-recipes/Output/*.exe
