# Changes in online interface:
# - Set build schedule to "0 3 * * *" for nightly builds.
#skip_commits:
#  # Do not build on commits. Only nightly builds (web interface)
#  author: /.*/

# Do not use shallow_clone, because coveralls needs a git repository
#shallow_clone: true
# Use large clone depth so that a tag is included for versioning
clone_depth: 256

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

environment:
  COVERALLS_REPO_TOKEN:
    secure: US5V2RWPr+toU2ZX8lyNs5IJIgfo2S1OwBQ0PUdqJMkDi4K4uJpTnZ2Ub1rda/j9
  GITHUB_API_TOKEN:
    secure: REdGxEyvL7z7Ohn1K6pdEPmLdCMme9rHZmRF7oItwYFb9VTBNUhCYyb+T4AeLY3M
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\.appveyor\\run_with_compiler.cmd"
  # https://github.com/appveyor/ci/issues/359
  matrix:
    - PYTHON: "C:\\Miniconda36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"


init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # Install InnoSetup and add to path
  # Copied from
  # https://github.com/Phonations/Joker/blob/master/appveyor.yml
  - appveyor-retry choco install -y InnoSetup

  # Determine platform
  - '%PYTHON%/python -c "import platform; print(platform.uname())"'
  - '%PYTHON%/python -c "import sys; print(sys.maxint)"'
  - '%PYTHON%/python -c "import sys; print(sys.version)"'

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"

  # Install package-specific libraries
  # CONDA installs
  # Pinned versions are defined in .appveyor\pinned
  - xcopy .appveyor\pinned %PYTHON%\conda-meta\ /Y
  - "appveyor-retry conda install --yes --quiet matplotlib numpy pip scipy wxpython"
  # PIP installs
  # Install the build dependencies of the project. 
  - "pip install cython wheel"
  # Install package-specific libraries  
  - "pip install simplejson sympy"
  - "pip install lmfit==0.9.2"
  # Install pyinstaller (includes dependency for pywin32)
  - "%WITH_COMPILER% pip install pyinstaller==3.3.1"
  # Run develop (installs yet missing packages and runs cython)
  - "%WITH_COMPILER% %PYTHON%/python setup.py develop"

  # Show the installed packages
  - "pip freeze"

build: off

test_script:
  - 'python -c "import pycorrfit; print(pycorrfit.__version__)"'
  - "pip install coverage"
  - "pip install codecov"
  - "coverage run --source=pycorrfit ./setup.py test"
  - "coverage report -m"
  - "codecov || exit 0"

after_test:
  # If tests are successful, create a whl package for the project.
  - "%WITH_COMPILER% %PYTHON%/python setup.py bdist_wheel"
  - ps: "ls dist"
  # Run pyinstaller
  # This will create the "win7_innosetup.iss" file
  - "%WITH_COMPILER% pyinstaller -y --log-level=WARN .appveyor\\PyCorrFit_win7.spec"
  # Create InnoSetup installers
  # Set InnoSetup path here, because Cython complained about it.
  - set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - iscc /Q win7_innosetup.iss

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
  # InnoSetup files
  - path: Output\*

deploy:
  provider: GitHub
  auth_token:
    secure: /b5SfmYssAfLaWi0qkPhxR5CruSVBZUurSQLEL3RAaRlHn6HTPrkIqvrLDk/8JxB
  artifact: /.*\.exe/, /.*\.whl/
  draft: true
  prerelease: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
